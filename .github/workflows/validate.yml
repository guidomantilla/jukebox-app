# Dependency Review Action
#
# This Action will scan dependency manifest files that change as part of a Pull Request,
# surfacing known-vulnerable versions of the packages declared or updated in the PR.
# Once installed, if the workflow run is marked as required, PRs introducing known-vulnerable packages will be blocked from merging.
#
# Source repository: https://github.com/actions/dependency-review-action
# Public documentation: https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review#dependency-review-enforcement
name: 'Validate'
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      HOST_POST: ':8080'
      DATASOURCE_DRIVER: 'mysql'
      DATASOURCE_USERNAME: ${{secrets.DATASOURCE_USERNAME}}
      DATASOURCE_PASSWORD: ${{secrets.DATASOURCE_PASSWORD}}
      DATASOURCE_URL: ${{secrets.DATASOURCE_URL}}
      LOG_LEVEL: 'WARN'
      SENTRY_DSN: ${{secrets.SENTRY_DSN}}
      SENTRY_ENVIRONMENT: ${{secrets.SENTRY_ENVIRONMENT}}
      SENTRY_RELEASE: ${{secrets.SENTRY_RELEASE}}
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        go: ['1.18', '1.19']

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3

      - name: 'Set up Go'
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: 'Install golangci-lint'
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v2

      - name: 'Verify Dependencies'
        run: go mod tidy && go mod verify

      - name: 'Format'
        run: make format

      - name: 'Vet'
        run: make vet

      - name: 'Lint'
        run: make lint

      - name: 'Unit Test'
        run: make test

      - name: 'Compile'
        run: make compile
