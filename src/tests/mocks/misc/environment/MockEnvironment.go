// Code generated by MockGen. DO NOT EDIT.
// Source: jukebox-app/src/misc/environment (interfaces: Environment)

// Package environment is a generated GoMock package.
package environment

import (
	environment "jukebox-app/src/misc/environment"
	properties "jukebox-app/src/misc/properties"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEnvironment is a mock of Environment interface.
type MockEnvironment struct {
	ctrl     *gomock.Controller
	recorder *MockEnvironmentMockRecorder
}

// MockEnvironmentMockRecorder is the mock recorder for MockEnvironment.
type MockEnvironmentMockRecorder struct {
	mock *MockEnvironment
}

// NewMockEnvironment creates a new mock instance.
func NewMockEnvironment(ctrl *gomock.Controller) *MockEnvironment {
	mock := &MockEnvironment{ctrl: ctrl}
	mock.recorder = &MockEnvironmentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvironment) EXPECT() *MockEnvironmentMockRecorder {
	return m.recorder
}

// AppendPropertySources mocks base method.
func (m *MockEnvironment) AppendPropertySources(arg0 ...properties.PropertySource) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "AppendPropertySources", varargs...)
}

// AppendPropertySources indicates an expected call of AppendPropertySources.
func (mr *MockEnvironmentMockRecorder) AppendPropertySources(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppendPropertySources", reflect.TypeOf((*MockEnvironment)(nil).AppendPropertySources), arg0...)
}

// GetPropertySources mocks base method.
func (m *MockEnvironment) GetPropertySources() []properties.PropertySource {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPropertySources")
	ret0, _ := ret[0].([]properties.PropertySource)
	return ret0
}

// GetPropertySources indicates an expected call of GetPropertySources.
func (mr *MockEnvironmentMockRecorder) GetPropertySources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPropertySources", reflect.TypeOf((*MockEnvironment)(nil).GetPropertySources))
}

// GetValue mocks base method.
func (m *MockEnvironment) GetValue(arg0 string) environment.EnvVar {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValue", arg0)
	ret0, _ := ret[0].(environment.EnvVar)
	return ret0
}

// GetValue indicates an expected call of GetValue.
func (mr *MockEnvironmentMockRecorder) GetValue(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValue", reflect.TypeOf((*MockEnvironment)(nil).GetValue), arg0)
}

// GetValueOrDefault mocks base method.
func (m *MockEnvironment) GetValueOrDefault(arg0, arg1 string) environment.EnvVar {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValueOrDefault", arg0, arg1)
	ret0, _ := ret[0].(environment.EnvVar)
	return ret0
}

// GetValueOrDefault indicates an expected call of GetValueOrDefault.
func (mr *MockEnvironmentMockRecorder) GetValueOrDefault(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValueOrDefault", reflect.TypeOf((*MockEnvironment)(nil).GetValueOrDefault), arg0, arg1)
}
