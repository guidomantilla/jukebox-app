version: "3.9"  # optional since v1.27.0
services:
  ## KAFKA
  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    platform: linux/x86_64
    restart: always
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    volumes:
      - kafka-zookeeper_secrets:/etc/zookeeper/secrets
      - kafka-zookeeper_data:/var/lib/zookeeper/data
      - kafka-zookeeper_log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_SERVER_ID: '1'
      ZOOKEEPER_SERVERS: 'kafka-zookeeper:2888:3888'
    networks:
      - kafka-network
  kafka-zoonavigator:
    image: elkozmon/zoonavigator:latest
    platform: linux/x86_64
    restart: always
    container_name: kafka-zoonavigator
    ports:
      - "8004:8000"
    depends_on:
      - kafka-zookeeper
    environment:
      HTTP_PORT: 8000
      AUTO_CONNECT_CONNECTION_STRING: kafka-zookeeper:2181
    networks:
      - kafka-network
  kafka-broker:
    image: confluentinc/cp-kafka:latest
    platform: linux/x86_64
    restart: always
    container_name: kafka-broker
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    depends_on:
      - kafka-zookeeper
    volumes:
      - kafka-broker_secrets:/etc/kafka/secrets
      - kafka-broker_data:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka-broker:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_JMX_PORT: '9999'
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.authorizer.AclAuthorizer'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
    networks:
      - kafka-network
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:latest
    platform: linux/x86_64
    restart: always
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - kafka-zookeeper
      - kafka-broker
    volumes:
      - kafka-schema-registry_secrets:/etc/schema-registry/secrets
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - kafka-network
  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    platform: linux/x86_64
    restart: always
    container_name: kafka-rest-proxy
    ports:
      - "8082:8082"
    depends_on:
      - kafka-zookeeper
      - kafka-broker
      - kafka-schema-registry
    environment:
      # KAFKA_REST_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker:19092
    networks:
      - kafka-network
  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    platform: linux/x86_64
    restart: always
    container_name: kafka-connect
    ports:
      - "8083:8083"
    depends_on:
      - kafka-zookeeper
      - kafka-broker
      - kafka-schema-registry
      - kafka-rest-proxy
    volumes:
      - kafka-connect_jars:/etc/kafka-connect/jars
      - kafka-connect_secrets:/etc/kafka-connect/secrets
      - kafka-connect_kafka_secrets:/etc/kafka/secrets
      - kafka-connect_kafka_data:/var/lib/kafka/data
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-broker:19092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components'
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.4.0
        /etc/confluent/docker/run
    networks:
      - kafka-network
  kafka-ksqldb:
    image: confluentinc/cp-ksqldb-server:latest
    platform: linux/x86_64
    restart: always
    container_name: kafka-ksqldb
    ports:
      - "8088:8088"
    depends_on:
      - kafka-zookeeper
      - kafka-broker
    environment:
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker:19092
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: kafka-ksqldb_
    networks:
      - kafka-network
volumes:

  ## KAFKA
  kafka-zookeeper_secrets:
    name: kafka-zookeeper_secrets
  kafka-zookeeper_data:
    name: kafka-zookeeper_data
  kafka-zookeeper_log:
    name: kafka-zookeeper_log
  kafka-broker_secrets:
    name: kafka-broker_secrets
  kafka-broker_data:
    name: kafka-broker_data
  kafka-schema-registry_secrets:
    name: kafka-schema-registry_secrets
  kafka-connect_jars:
    name: kafka-connect_jars
  kafka-connect_secrets:
    name: kafka-connect_secrets
  kafka-connect_kafka_secrets:
    name: kafka-connect_kafka_secrets
  kafka-connect_kafka_data:
    name: kafka-connect_kafka_data

networks:
  kafka-network:
    name: kafka-network
    driver: bridge

